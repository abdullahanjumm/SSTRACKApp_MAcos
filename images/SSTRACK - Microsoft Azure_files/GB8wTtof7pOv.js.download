define("MsPortalImpl/ReactViews/ReactFrame.CopilotConfig",["require","exports","Fx/DependencyInjection","FxInternal/RpcEndPointsCore"],(function(e,t,r,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.CopilotFxRequireConfigSource=void 0;let i=class{constructor(e){const t={};this.getRequireConfig=r=>(void 0===t[r]&&(t[r]=o.getCopilotFxRequireConfigEndPoint.invoke(e,"fxw",r)),t[r])}};t.CopilotFxRequireConfigSource=i,t.CopilotFxRequireConfigSource=i=__decorate([__metadata("fx:diagnostics",[e,"CopilotFxRequireConfigSource"]),r.Class(),__metadata("design:paramtypes",[FxImpl.Rpc.Client])],i)})),
define("MsPortalImpl/ReactViews/ReactFrame.DevTools",["require","exports","MsPortalImpl/ReactViews/ReactFrame.Constants"],(function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.applyPerfToolsToReactFrame=void 0,t.applyPerfToolsToReactFrame=function(e){const{bladeId:t,reactFramePromise:o}=e,i={completePerfToolApplication:(e,t,o)=>{i.profileOnLoad?(t[r.SESSION_STORAGE_DEVTOOLS_RELOAD_AND_PROFILE]="true",t[r.SESSION_STORAGE_DEVTOOLS_RECORD_CHANGE_DESCRIPTIONS_KEY]=MsPortalImpl.localStorage.getItem(r.SESSION_STORAGE_DEVTOOLS_RECORD_CHANGE_DESCRIPTIONS_KEY),o(e.element)):delete t[r.SESSION_STORAGE_DEVTOOLS_RELOAD_AND_PROFILE]},networkThrottlingEnabled:MsPortalImpl.sessionStorage.getItem(r.SESSION_STORAGE_THROTTLE)===t,networkThrottlingPromise:Promise.resolve(void 0),profileOnLoad:!!MsPortalImpl.sessionStorage.getItem(r.SESSION_STORAGE_DEVTOOLS_RELOAD_AND_PROFILE),toggleDevToolsPromise:Promise.resolve(void 0)};return i.networkThrottlingEnabled&&(i.networkThrottlingPromise=async function(e){const{bladeId:t,diContainer:r,extensionName:o,getAsyncEndTime:i,loadReactViewStart:s,updateLoadReactViewStart:n}=e;try{const{KustoClient:e,QueryType:i}=await MsPortalFx.require("MsPortalImpl/Services/Kusto/KustoClient"),s=await r.get(e).getPrimaryData(i.P95NetworkRequestDurations,{bladeId:t,tableName:"HubsExtension"===o?"LighthousePerfVizClientTelemetry":"LighthousePerfVizExtTelemetry"},!0);return console.info("Network throttling: Network requests will be throttled to p95 durations. Unrecognized network requests will be throttled to averaged times."),s.data[0].bag}catch(e){return console.error(`Failed to get network request durations from Kusto: ${e}`),{}}finally{const e=i(),t=Date.now();if("number"==typeof e&&t>e){n(t-(e-s))}}}(e),o.then((e=>{e.networkThrottlingTelemetryPromise=i.networkThrottlingPromise}))),i.profileOnLoad&&(i.toggleDevToolsPromise=MsPortalFx.require("MsPortalImpl/Parts/ReactDevTools/ReactDevTools").then((async({initializeReactDevTools:e,toggleReactDevTools:t})=>(await e(),t)))),i}})),
define("MsPortalImpl/ReactViews/ReactFrame.ViewPrefetcher",["require","exports","Fx/DependencyInjection","MsPortalImpl/ReactViews/ReactFrame.Utils","MsPortalImpl/Services/Services.ExtensionTokensManager","Fx/ResourceManagement","Fx/Experimentation"],(function(e,t,r,o,i,s,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.stubProvisioningContext=t.determineBladeUseType=t.getPrefetchableTokenNames=t.prefetchExtensionTokens=t.ReactQueryHelper=t.ReactQueryHelperFactory=void 0;var a=MsPortalFx.Base.Diagnostics.Telemetry;const l=["@microsoft/azureportal-reactview/Provisioning"],c=e=>"createstorageaccount.reactview"===e.toLowerCase()&&{resourceTypes:["Microsoft.Storage/storageAccounts"]}||"virtualnetworkcreatev3.reactview"===e.toLowerCase()&&{resourceTypes:["Microsoft.Network/virtualNetworks"]}||"publicipaddresscreate.reactview"===e.toLowerCase()&&{resourceTypes:["Microsoft.Network/publicIPAddresses"]}||"createaksbladev2.reactview"===e.toLowerCase()&&{resourceTypes:["Microsoft.ContainerService/managedClusters"]}||"createautomatic.reactview"===e.toLowerCase()&&{resourceTypes:["Microsoft.ContainerService/managedClusters"]}||"createcomputefleet.reactview"===e.toLowerCase()&&{resourceTypes:["Microsoft.AzureFleet/fleets"]}||"createazurefleetmanager.reactview"===e.toLowerCase()&&{resourceTypes:["Microsoft.ContainerService/fleets"]}||"createexperience.reactview"===e.toLowerCase()&&{}||"simplecreate.reactview"===e.toLowerCase()&&{};let u=class{constructor(e){this._diContainer=e}createHelper(e){return new m(this._diContainer,e.viewName,e.queryStore)}};t.ReactQueryHelperFactory=u,t.ReactQueryHelperFactory=u=__decorate([__metadata("fx:diagnostics",[e,"ReactQueryHelperFactory"]),r.Class(),__metadata("design:paramtypes",[r.Container])],u);class m{constructor(e,t,r){this._diContainer=e,this._viewName=t,this._queryStore=r,this._perfTimingLogs=[],this._queryPromises=[],this._shellReactQueriesPromise=MsPortalFx.require("MsPortalImpl/ReactViews/ShellReactQueries"),this._prefetchShellAssignments(),this._prefetchGlobalSubscriptions()}async prefetchReactQueries(e){const{lifetime:t,viewMetadata:r,determineParams:o,provisioningContextDeferred:i,viewName:s,logPerfTiming:n}=e;this._sendLogs=n;const a=r.doesProvisioning,{isCreateBlade:l,resourceId:u,doesProvisioning:m,containsBrowseComponents:d}=p(o);return u&&this._prefetchEssentialsResourceInfo(u,t),this._prefetchCreateData({isCreateBlade:l,withProvisioningInfix:m,viewMetadataDoesProvisioning:a,createViewConfig:c(this._viewName),provisioningContextDeferred:i}),d&&this._prewarmBrowseFrame(s,o),Promise.all(this._queryPromises).then((()=>{this._perfTimingLogs.length&&this._sendLogs(this._perfTimingLogs)}))}_logRequest(e,t){this._perfTimingLogs.push({groupName:"Shell React Queries",name:e,isAsyncStart:t,isAsyncEnd:!t,timeStamp:Date.now()}),this._sendLogs&&(this._sendLogs(this._perfTimingLogs),this._perfTimingLogs=[])}_bindQuery(e,t,r=!0){r&&this._logRequest(e.name,!0);return e.bind(this._queryStore,...t).get({force:!0}).then((t=>(this._logRequest(e.name,!1),t)))}_prefetchGlobalSubscriptions(){this._globalSubscriptionsPromise=this._shellReactQueriesPromise.then((e=>this._bindQuery(e.globalSubscriptionsQuery,[this._diContainer]))),this._queryPromises.push(this._globalSubscriptionsPromise)}_prefetchShellAssignments(){this._queryPromises.push(this._shellReactQueriesPromise.then((e=>this._bindQuery(e.experimentationShellAssignmentsQuery,[this._diContainer]))))}_prefetchEssentialsResourceInfo(e,t){this._queryPromises.push(this._shellReactQueriesPromise.then((r=>this._bindQuery(r.essentialsResourceInfoQuery,[t,e,!0]))))}_prefetchCreateData(e){const{isCreateBlade:t,withProvisioningInfix:r,viewMetadataDoesProvisioning:o,createViewConfig:i,provisioningContextDeferred:s}=e;t||r||o?this._queryPromises.push(Promise.all([this._globalSubscriptionsPromise,this._shellReactQueriesPromise]).then((([e,t])=>{const n=this._bindQuery(t.initialDropdownValuesQuery,[this._diContainer,this._queryStore]),a=e.length>0,l=a&&i;return a&&this._logRequest(t.resourceGroupsQuery.name,!0),l&&this._logRequest(t.locationsForCreateQuery.name,!0),n.then((e=>{r||o?s.resolve(g(e)):s.resolve(void 0);const n=[],a=e?.subscriptionIds?.[0];if(a){if(i){const e=i.resourceTypes;n.push(this._bindQuery(t.locationsForCreateQuery,[{subscriptionId:a,resourceTypes:e}],!1))}n.push(this._bindQuery(t.resourceGroupsQuery,[[a]],!1))}return Promise.all(n)}))}))):s.resolve(void 0)}_prewarmBrowseFrame(t,r){this._queryPromises.push(new Promise(((t,r)=>{e(["./Browse.Prewarmer"],t,r)})).then((({prewarmBrowseFrame:e})=>{this._diContainer.get(n.Experimentation).shellAssignments.whenAvailable().then((o=>{e(t,r,this._queryStore,o)}))})))}}function d(e,t){const r=e.replace(".ReactView",".TokenFetcher."),i=r&&(0,o.getModuleIdAndUrl)(r,t,!0).id;return i?i.replace(r,"").split("!"):[]}function p(e){const{requireConfig:t,viewModuleId:r,viewName:o,url:i,parameters:n}=e,a={containsBrowseComponents:!1,isCreateBlade:!1,doesProvisioning:!1},c=r.replace(".ReactView",".WithProvisioning").toLowerCase();return Object.entries(t.dependencyTree).forEach((([e,t])=>{Object.entries(t).forEach((([t,r])=>{t.toLowerCase().startsWith(c)&&(a.doesProvisioning=!0),e===i&&r.forEach((e=>{if(l.includes(e))a.isCreateBlade=o.toLocaleLowerCase().split("/").pop().includes("create");else if("@microsoft/azureportal-reactview/Essentials"===e){if(n){const e=n.resourceId||n.id,t=s.ArmId.parse(e);!t?.kind||6!==t.kind&&3!==t.kind&&8!==t.kind&&4!==t.kind||(a.resourceId=e)}}else e.includes("@microsoft/azureportal-reactview/browse")&&(a.containsBrowseComponents=!0)}))}))})),a}function g(e){const t=MsPortalFx.getUniqueId();return{initialValues:e,referenceType:{marketplaceId:void 0,assetType:void 0,assetKind:void 0},marketplaceItem:{categoryIds:[],id:"Microsoft.Portal",itemDisplayName:"NoMarketplace",products:[],version:"",productsWithNoPricing:[],publisherDisplayName:"Microsoft.Portal",deploymentName:"NoMarketplace",launchingContext:{telemetryId:t,source:[],galleryItemId:""},deploymentTemplateFileUris:{},uiMetadata:null},telemetryId:t,provisioningConfig:void 0}}t.ReactQueryHelper=m,t.prefetchExtensionTokens=function(e,t,r,o,s,n){let l=[];if(MsPortalFx.isFeatureEnabled("reacttokenfetch")&&e){const c=n.get(i.ExtensionTokensManager).createAuthTokenCache(r).getToken;c(),l=s.tokensToPrefetch?s.tokensToPrefetch:d(e,o),l.length&&(l.forEach((e=>c({resourceName:e}))),a.trace({source:"ReactViewPrewarmer",action:"PrefetchCustomToken",name:t,extension:r,data:{resourceNames:l}}))}return l},t.getPrefetchableTokenNames=d,t.determineBladeUseType=p,t.stubProvisioningContext=g})),
define("MsPortalImpl/ReactViews/ReactFrame.ViewLoader",["require","exports","MsPortalImpl/Services/Services.ExtensionStorageManager","MsPortalImpl/Extension/ExtensionManagerOptions","MsPortalImpl/Base/Themes","FxInternal/AsyncLoader","MsPortalImpl/ReactViews/ReactFrame.CopilotConfig","MsPortalImpl/ReactViews/ReactFrame.Constants","MsPortalImpl/ReactViews/ReactFrame.ViewPrefetcher","MsPortalImpl/ReactViews/ReactFrame.DevTools","MsPortalImpl/ReactViews/ReactFrame.Utils","MsPortalImpl/ReactViews/ReactQueryStore","MsPortalImpl/Base/Base.DeepLink","FxInternal/RpcEndPointsCore"],(function(e,t,r,o,i,s,n,a,l,c,u,m,d,p){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.loadReactViewIntoFrame=void 0;const g="Extension boot",h=MsPortalFx.isFeatureEnabled("verifytopleveldomains"),f=(0,u.getBrowserTabId)();function w(e,t,r,o){return e.push({groupName:g,name:r,timeStamp:t}),o.then((t=>(e.push({groupName:g,name:r,timeStamp:Date.now()}),t)))}t.loadReactViewIntoFrame=async function(e){const{bladeSequenceNumber:t,diContainer:g,extensionName:P,flights:v,frameLifetime:y,inContextPane:R,parameters:_,provisioningContextDeferred:C,reactFramePromise:S,rpcClient:T,viewLoadingStartedDeferred:I,viewName:x}=e;let F=e.loadReactViewStart;const E=g.get(o.PostBootCache).get(P),M=g.get(m.ReactQueryStoreManager).getViewStore(P,t,y),b=g.get(l.ReactQueryHelperFactory).createHelper({viewName:x,queryStore:M}),D=(0,u.watchFirstHiddenAndOffline)(y);let k;const N=`Extension/${P}/Blade/${x}`,{completePerfToolApplication:L,networkThrottlingPromise:V,profileOnLoad:q,toggleDevToolsPromise:O}=(0,c.applyPerfToolsToReactFrame)({bladeId:N,diContainer:g,extensionName:P,getAsyncEndTime:()=>k,loadReactViewStart:F,updateLoadReactViewStart:e=>{F=e},reactFramePromise:S}),A=Date.now(),Q=[{groupName:"ReactView boot",name:"extension boot",timeStamp:A}],B=v.earlyExtensionAssignments?p.getVariantAssignmentsForExtension.invoke(T,"fxw",P):Promise.resolve(void 0),H=g.get(r.ExtensionStorageManager).getStorageForExtension(P),z=MsPortalFx.require("MsPortalImpl/ReactViews/ReactFrameBinder"),U=g.get(n.CopilotFxRequireConfigSource).getRequireConfig(P),G="HubsExtension"===P?Promise.resolve(null):g.getAsync(s.get("MsPortalImpl/Services/Services.CopilotReactViewChannelFactory","ReactViewChannelFactory")).then((e=>e.createChannel(y,N,t))),j=S.then((e=>(I.resolve(),e))),[K,$,W,Y,J,X,Z]=await Promise.all([w(Q,A,"storage",H),w(Q,A,"boot",E),z,w(Q,A,"frame",j),w(Q,A,"copilotConfig",U),w(Q,A,"copilotPort",G),w(Q,A,"extensionAssignments",B)]);k=Date.now();const ee=await V,te=await O,re=K.serialize(),{port:oe}=W.loadModel(T,P),ie=ko.toJS(_),se=g.get(i.ThemeManager),ne=e=>(e&&(e.blockedHosts=new Set(MsPortalEarly.blockedHosts)),e),ae=ne($.requireConfig),{id:le,url:ce}=x&&(0,u.getModuleIdAndUrl)(x,ae),ue=x&&`${x.substring(0,x.length-10)}.DataFetcher`,me=ue&&(0,u.getModuleIdAndUrl)(ue,ae).id,de=$.extensionEnvironment.sdkEnv?.viewMetadata,pe={...de?.["*"],...de?.[x]},ge=(0,l.prefetchExtensionTokens)(le,x,P,ae,pe,g);Y.supportsFrameReuse=Boolean(pe.supportsFrameReuse),Y.onDisposed=()=>{Y.onDisposed=null,y.dispose()};const he={viewName:x,sequenceNumber:t};FxImpl.Extension.onNewReactViewEndPoint.invoke(T,P,he),y.registerForDispose((()=>{FxImpl.Extension.onReactViewDisposed.invoke(T,P,he)}));const fe=Date.now();Q.push({groupName:"ReactView boot",name:"extension boot",timeStamp:fe}),Q.push({groupName:"ReactView boot",name:"early",timeStamp:fe}),L(Y,re.sessionStorage,te);const we=g.get(FxImpl.Features);Y.element.name=x,Y.port.postMessage({signature:a.reactFrameSignature,kind:3,data:{requireConfig:!Y.initialized&&x&&ae,initModules:[le],parameters:ie,type:"early",environment:!Y.initialized&&$.extensionEnvironment,features:!Y.initialized&&$.features,perfTelemetry:{experiments:v,frameReused:Y.reused},internalEnv:{blockUntrustedDomains:FxImpl.internalEnv.blockUntrustedDomains,azsEndpoints:FxImpl.internalEnv.azsEndpoints,fxTrustedDomains:MsPortalFx.getEnvironmentValue("trustedDomains")},fetcherId:me,serializedStorage:re,sessionId:MsPortalFx.sessionId,browserTabId:f,tokenResourceNames:ge,isMenuBladeContent:e.isMenuBladeContent,perfLogEntries:Q,loadReactViewStart:F,azHostId:t,queryStoreEntries:M.getEntries(),verifyLinks:h,theme:{mode:se.currentTheme().mode,highContrastMode:se.highContrastMode()},name:x,inContextPane:R,profileOnLoad:q,networkRequestDurations:ee,entryPointName:e.entryPointName,entryPointArgs:e.entryPointArgs,copilotFxRequireConfig:ne(J),hashQueryString:(0,d.getCurrentUri)().hashQueryString,extensionAssignments:Z,queryStringAssignments:{flightsFeature:we.getValue("experimentationflights"),fromQuery:we.shellFeatures.fromQuery}}},[oe,...X?[X]:[]]),b.prefetchReactQueries({lifetime:y,viewMetadata:pe,determineParams:{requireConfig:ae,viewModuleId:le,viewName:x,url:ce,parameters:_},provisioningContextDeferred:C,viewName:x,logPerfTiming:e=>{Y.port.postMessage({signature:a.reactFrameSignature,kind:3,data:{type:"pushPerfTimings",entries:e}})}}),Y.model=W.loadModelForView(T,ae,P,x,ie),Y.getFirstHiddenOrOfflineTime=D,Y.initialized=!0}}));